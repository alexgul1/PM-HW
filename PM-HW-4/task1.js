console.log(2 + "2" == "2" + 2);  // true,
/*
так как слева и справа один с операндов строка, то происходит конкатенация строк и сравниваться будут "22" и "22"
*/
console.log(2 + "3" == "3" + 2); // false,
/*
так же как и в прошлом сравнении будет конкатенация и сравниваться будут "23" и "32",
и они уже не будут равны так как ASCII code различаются в одних и тех же позициях
*/
console.log("3" + "2" == 3 + 2); // false,
/*
слева - конкатенация строк ("32"), справа - сложение двух чисел (5),
так как левая часть может преобразоватся в число то будет сравнение 2 чисел - 32 и 5
*/
console.log("3" + "2" == "3" + 2); // true,
/*
слева и справа - конкатенация строк,
где справа число 2 неявно преобразуется в строку
и будет сравнение "32" = "32"
*/
console.log("3" + "2" == 2 + "3"); // false,
/*
также как и в прошлом примере - конкатенация строк,
где число 2 неявно преобразуется в строку
но "32" не равно "23"
*/
console.log(2 + Number("3") == Number("3") + 2); // true,
/*
сначала слева и справа строки преобразуются в числа,
потом будет сложение чисел с двух сторон
и будут сравниваться 5 и 5
*/

console.log(12 / "6");  // 2,
/*
второй операнд неявно преобразуется в число и это будет деление 12 / 6
*/
console.log("number" + 15 + 3); // "number153",
/*
сначала происходит конкатенация "number" и 15(неявно преобразуется в строку) - "number15",
а затем "number15" и 3(неявно преобразуется в строку) - "number153"
*/
console.log(15 + 3 + "number"); // "18number"
/*
сначала будет сложение 2 чисел - 15 и 3 - 18,
а затем конкатенация 18(неявно преобразуется в строку) и "number" - "18number"
*/
console.log([1] > null);  // true,
/*
левый операнд преобразуется в число 1
правый операнд - 0
1 больше 0
*/
console.log("foo" + +"bar"); // "fooNaN",
/*
так как унарный оператор + преобразовывает операнд в число,
он пытается преобразовать "bar" в число, но у него не получается и он возвращает NaN
и будет конкатенация "foo" и NaN
*/
console.log('true' == true); // false,
/*
при сравнении строки и буллиана, два операнда преобразовываются в число
слева будет - NaN
справа - 1
при сравнении числа и NaN - всегда false
*/
console.log(false == 'false'); // false ,
/*
при сравнении строки и буллиана, два операнда преобразовываются в число
слева - 0
справа будет - NaN
при сравнении числа и NaN - всегда false
*/
console.log(null == ''); // false,
/*
если сравнивать оператором(==) null с любым значением кроме null и undefined то будет всегда false
*/
console.log(!!"false" == !!"true"); // true,
/*
унарный оператор !! преобразовывает значение в Boolean,
так как в случаи строки только пустая строка('') будет равна false
то у нас будет сравнение true и true
*/
console.log([`x`] == `x`); // true,
/*
масив буде преобразован к примитивному типу,
в данном случае к строке - 'x'
затем будет сравнение двух строк 'x'и 'x'
*/

