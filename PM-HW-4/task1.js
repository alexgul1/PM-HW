console.log(2 + "2" == "2" + 2);  // true, так как слева и справа один с операндов строка, то происходит конкатенация строк и сравниваться будут "22" и "22"
console.log(2 + "3" == "3" + 2); // false, так же как и в прошлом сравнении будет конкатенация и сравниваться будут "23" и "32", и они уже не будут равны так как ASCII code различаются
console.log("3" + "2" == 3 + 2); // false, слева - конкатенация строк ("32"), справа - сложение двух чисел (5), но потом правая часть неявно преобразуется в строку и будет сравнение уже 2 строк
console.log("3" + "2" == "3" + 2); // true, слева и справа - конкатенация строк, и "32" = "32"
console.log("3" + "2" == 2 + "3"); // false, также конкатенация строк, но "32" не равно "23"
console.log(2 + Number("3") == Number("3") + 2); // true, изза того что тут явное преобразование строки в число, слева и справа будет сложение чисел и будут сравниваться 5 и 5

console.log(12 / "6");  // 2, второй операнд неявно преобразуется в число и это будет деление 12 / 6
console.log("number" + 15 + 3); // "number153", сначала происходит конкатенация "number" и 15 - "number15", а затем "number15" и 3 - "number153"
console.log(15 + 3 + "number"); // "18number" - сначала будет сложение 2 чисел - 15 и 3 - 18, а затем конкатенация 18 и "number" - "18number"
console.log([1] > null);  // true, будет преобразование и тогда левый операнд будет больше правого
console.log("foo" + + "bar"); // "fooNaN", так как унарный оператор +, пытается преобразовать "bar" в число, но у него не получается и он возвращает NaN и будет конкатенация "foo" и NaN
console.log('true' == true); // false, левая и правая часть преобразовываеться в число и тогда слева будет - NaN, а справа - 1
console.log(false == 'false'); // false , левая и правая часть преобразовываеться в число и тогда слева будет - 0, а справа - NaN
console.log(null == ''); // false, если сравнивать null с любым значением кроме null и undefined то будет всегда false
console.log(!!"false" == !!"true"); // true, унарный оператор !! преобразовывает значение в Boolean, а так только пустая строка будет равна 0, то у нас будет сравнение true и true
console.log([`x`] == `x`); // true, левая часть преобразуеться в строку и затем будет сравнение двух строк 'x'и 'x'

